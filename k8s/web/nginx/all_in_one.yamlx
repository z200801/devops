apiVersion: v1
kind: Namespace
metadata:
  name: nginx
  labels:
    name: nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nginx
data:
  nginx.conf: |
    server {
        listen 80;
        server_name app.example.com;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: nginx
spec:
  selector:
    app: nginx-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-pod
  template:
    metadata:
      labels:
        app: nginx-pod
    spec:
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config
      - name: htmldir
        emptyDir: {}
      initContainers:
      - name: install
        image: busybox:latest
        command: ['/bin/sh']
#        args: ['-c','echo "<html><body><h1>Hostname pod is [$(hostname)]</h1></body></html>">/mnt/index.html']
        args: ['-c','echo "<html><body><h1>Pod Name is [${POD_NAME}]</h1></body></html>">/mnt/index.html']
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: htmldir
          mountPath: "/mnt"
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d
        - name: htmldir
          mountPath: /usr/share/nginx/html
        resources:
           requests:
             cpu: "0.01"
             memory: "16Mi"
           limits:
             cpu: "0.02"
             memory: "32Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 2
          periodSeconds: 5
        livenessProbe:
          httpGet:
             path: /
             port: 80
          initialDelaySeconds: 2
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 2        

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-svc
            port:
              number: 80
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: compute-resources
  namespace: nginx
spec:
  hard:
    requests.cpu: "0.2"
    requests.memory: 32Mi
    limits.cpu: "0.5"
    limits.memory: 64Mi
---
